version: "3.5"
services:
  zk:
    image: confluentinc/cp-zookeeper:5.1.2
    hostname: zk
    networks:
      - confluent
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2

  kafka:
    image: "confluentinc/cp-enterprise-kafka:5.1.2"
    hostname: kafka
    hostname: kafka
    networks:
      - confluent
    volumes:
      - ./agents:/agents
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:9999
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: "-javaagent:/agents/jmx_prometheus_javaagent-0.10.jar=7071:/agents/kafka.yml"
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: 127.0.0.1

  # kafka-jmx-exporter:
  #   build: ./prometheus-jmx-exporter
  #   image: prometheus-jmx-exporter
  #   networks:
  #     - confluent
  #   environment:
  #     - JMX_PORT=9999
  #     - JMX_HOST=kafka
  #     - HTTP_PORT=8080
  #     - JMX_EXPORTER_CONFIG_FILE=kafka.yml

  prometheus:
    image: prom/prometheus:v2.5.0
    hostname: prometheus
    networks:
      - confluent
    ports:
      - 9090:9090/tcp
    volumes:
      - ./prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana:3.0.1
    networks:
      - confluent
    ports:
      - 3000:3000/tcp
    volumes:
      - "graf-db:/var/lib/grafana"

  graf-db:
    command:
      - cat
    tty: true
    image: infinityworks/graf-db:08
    networks:
      - confluent
    volumes:
      - "graf-db:/var/lib/grafana/"


  base:
    image: confluentinc/cp-kafka-connect:5.1.2
    hostname: base
    hostname: base
    entrypoint: /bin/sh
    tty: true
    networks:
      - confluent

volumes:
  graf-db:
networks:
  confluent: